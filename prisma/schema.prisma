// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(uuid())
  email              String   @unique
  passwordHash       String
  emailVerified      Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  verificationTokens VerificationToken[]
  refreshTokens      RefreshToken[]
  resetTokens        PasswordResetToken[]
}

model VerificationToken {
  id          String   @id @default(uuid())
  userId      String
  hashedToken String
  expiresAt   DateTime
  usedAt      DateTime?
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}

model RefreshToken {
  id           String   @id @default(uuid())
  userId       String
  hashedToken  String
  expiresAt    DateTime
  revokedAt    DateTime?
  replacedById String?  // this points to the new refresh token
  createdAt    DateTime @default(now())

  user         User     @relation(fields: [userId], references: [id])
}

model PasswordResetToken {
  id          String   @id @default(uuid())
  userId      String
  hashedToken String
  expiresAt   DateTime
  usedAt      DateTime?
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}